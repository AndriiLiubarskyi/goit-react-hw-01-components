{"version":3,"sources":["components/Social-profile/Social-profile.module.css","components/Statistics/Statistics.module.css","components/Friends/Friends.module.css","components/Social-profile/Social-profile.js","components/Statistics/Statistics.js","components/Friends/Friends.js","components/Transactions/Transactions.js","App.js","index.js"],"names":["module","exports","SocialProfile","avatar","name","tag","location","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","randomColor","Math","floor","random","Statistics","title","statistics","statisticsList","map","stat","item","style","backgroundColor","percentage","id","FriendListItem","isOnline","friendBlock","online","offline","width","Friends","friends","friendList","friend","TransactionHistory","items","table","type","amount","currency","App","userData","statisticalData","Transactions","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c29dcc4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Social-profile_profile__3CUoa\",\"description\":\"Social-profile_description__1Oz7f\",\"avatar\":\"Social-profile_avatar__39RpJ\",\"stats\":\"Social-profile_stats__3qkOk\",\"location\":\"Social-profile_location__sx7nt\",\"name\":\"Social-profile_name__3RunC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2TjhY\",\"statisticsList\":\"Statistics_statisticsList__2Lro6\",\"item\":\"Statistics_item__1AKI-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friends_friendList__2lkYg\",\"friendBlock\":\"Friends_friendBlock__3OdEx\",\"online\":\"Friends_online__3etVA\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Social-profile.module.css';\r\n\r\nconst SocialProfile = ({avatar, name, tag, location, stats }) => (\r\n    <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                className={styles.avatar}\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>@{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n            <li>\r\n                <span className={styles.label}>Followers</span>\r\n                <span className={styles.quantity}>{stats.followers}</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.label}>Views</span>\r\n                <span className={styles.quantity}>{stats.views}</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.label}>Likes</span>\r\n                <span className={styles.quantity}>{stats.likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n);\r\n\r\nSocialProfile.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string,\r\n    stats: PropTypes.object,\r\n};\r\n\r\n\r\nexport default SocialProfile;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css'\r\n\r\nconst Statistics = ({title, stats}) => (   \r\n  <section className={styles.statistics}>\r\n     {title && <h2 className={styles.title}>{title}</h2>}   \r\n        <ul className={styles.statisticsList}>\r\n            {stats.map((stat) => (\r\n                <li className={styles.item} key={stat.id} style={{ backgroundColor: `rgba( ${randomColor()} , ${randomColor()} , ${randomColor()}` }}>\r\n                    <span className={styles.label}>{stat.label}</span>\r\n                    <span className={styles.percentage}>{stat.percentage}%</span>\r\n                </li>)\r\n            )}\r\n        </ul>\r\n      </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n   stats: PropTypes.array.isRequired,\r\n};\r\nfunction randomColor () {\r\n  return Math.floor(Math.random() * 256);\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Friends.module.css'\r\n\r\n\r\nconst FriendListItem = ({avatar, name, isOnline, id }) => (\r\n    <li key={id}\r\n        className={`${styles.friendBlock} ${isOnline ? styles.online : styles.offline}`}>\r\n        <img src={avatar} alt=\"avatar\" width=\"80\" />\r\n        <p>{name}</p>\r\n    </li>\r\n);\r\n\r\nconst Friends = ({friends}) => (\r\n    <ul className={styles.friendList}>\r\n        {friends.map((friend) => (\r\n            <FriendListItem \r\n              key={friend.id}\r\n              avatar={friend.avatar}\r\n              name={friend.name}\r\n              isOnline={friend.isOnline}\r\n            />\r\n        ))\r\n        }\r\n    </ul>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Transactions.module.css'\r\n\r\nconst TransactionHistory = ({items}) => (    \r\n            \r\n        <table className={styles.table}>\r\n            <thead>\r\n                <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {items.map((item) => (\r\n                <tr key={item.id}>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{item.currency}</td>\r\n                </tr>\r\n                                ))}\r\n            </tbody>\r\n        </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;","import React from \"react\";\r\n\r\nimport Profile from \"./components/Social-profile/Social-profile\";\r\nimport userData from \"./user.json\";\r\n\r\nimport statisticalData from \"./statistical-data.json\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\n\r\nimport friends from \"./friends.json\";\r\nimport FriendList from \"./components/Friends/Friends\";\r\n\r\nimport transactions from \"./transactions.json\";\r\nimport Transactions from \"./components/Transactions/Transactions\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n        <Profile\r\n            key={userData.tag}\r\n            avatar={userData.avatar}\r\n            name={userData.name}\r\n            tag={userData.tag}\r\n            location={userData.location}\r\n            stats={userData.stats}\r\n        />\r\n\r\n             <Statistics\r\n                title='Upload stats'\r\n                stats={statisticalData}   \r\n            />\r\n\r\n            <FriendList\r\n                friends={friends}\r\n            />\r\n\r\n            <Transactions\r\n            items={transactions}\r\n            />\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n        \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}